use Examination_Project

--STORED PROCEDURE TO INSERT THE ANSWERS OF A QUESTION IT TAKES FOUR PARAMETER  QUESTION ID ,ANSWER1 ,ANSWER2 ,ANSWER3 ,ANSWER4
CREATE OR ALTER PROCEDURE SP_INSERT_QUES_CHOICE  @Q_ID INT , @CH1 VARCHAR(MAX) , @CH2 VARCHAR(MAX) , @CH3 VARCHAR(MAX) , @CH4 VARCHAR(MAX) 
AS 
          BEGIN TRY 
		       INSERT INTO Ques_Choice 
			   VALUES ( @Q_ID , @CH1 , @CH2 , @CH3 , @CH4)
		  END TRY
		  BEGIN CATCH
		       SELECT ERROR_MESSAGE()
		  END CATCH

------CALLING
EXECUTE SP_INSERT_QUES_CHOICE 100 ,TRUE,FALSE,NULL,NULL


--STORED PROCEDURE TO SELECT FROM QUES_CHOICE TABLE BY Q_ID TAKES ONE PARAMETER QUESTION ID
CREATE OR ALTER PROCEDURE SP_SELECT_QUES_CHOICE @Q_ID INT 
AS
          IF EXISTS (SELECT @Q_ID FROM Ques_Choice WHERE Q_Id=@Q_ID)
				  BEGIN TRY
						  SELECT Q.Q_Id , Tittle , ch1 , ch2 , ch3 , ch4 , Answer , Type , Grade
						  FROM Ques_Choice QC , Question Q
						  WHERE Q.Q_Id=QC.Q_Id AND Q.Q_Id=@Q_ID
				  END TRY
				  BEGIN CATCH
						  SELECT ERROR_MESSAGE()
				  END CATCH
		  ELSE 
				  SELECT 'INVALID QUESTION NUMBER'

------CALLING
EXECUTE SP_SELECT_QUES_CHOICE 100 




--STORED PROCEDURE TO update FROM QUES_CHOICE TABLE BY Q_ID TAKES THREE PARAMETER QUESTION ID AND COLUMN NAME (CH1 , CH2 , CH3 , CH4) , NEWVALUE
CREATE OR ALTER PROCEDURE SP_UPDATE_QUES_CHOICE @Q_ID INT , @COL VARCHAR(50) ,@VALUE NVARCHAR(MAX)
AS
          IF EXISTS (SELECT Q_Id FROM Ques_Choice WHERE Q_Id=@Q_ID)
				  BEGIN TRY
				      DECLARE @SQL NVARCHAR(MAX) 
					  SET @SQL = 'UPDATE Ques_Choice SET ' + QUOTENAME(@COL) + ' =@VALUE WHERE Q_Id = @Q_ID'
					  EXECUTE SP_EXECUTESQL @SQL ,N'@COL VARCHAR(50), @VALUE NVARCHAR(MAX),@Q_ID INT' ,@COL, @VALUE , @Q_ID;
					  SELECT 'SUCCESSFUL UPDATED ROW'
				  END TRY
				  BEGIN CATCH
		              SELECT ERROR_MESSAGE()
				  END CATCH
		  ELSE 
				  SELECT 'INVALID QUESTION NUMBER'

------CALLING
EXECUTE SP_UPDATE_QUES_CHOICE 100 , 'CH3' , NULL



--STORED PROCEDURE TO DELETE FROM QUES_CHOICE TABLE BY Q_ID TAKES ONE PARAMETER QUESTION ID 
CREATE OR ALTER PROCEDURE SP_DELETE_QUES_CHOICE @Q_ID INT 
AS
          IF EXISTS (SELECT Q_Id FROM Ques_Choice WHERE Q_Id=@Q_ID)
				  BEGIN TRY
					  DELETE FROM Ques_Choice 
					  WHERE Q_Id=@Q_ID
				  END TRY
				  BEGIN CATCH
		              SELECT ERROR_MESSAGE()
				  END CATCH
		  ELSE 
				  SELECT 'INVALID QUESTION NUMBER'

------CALLING
EXECUTE SP_DELETE_QUES_CHOICE 100 















